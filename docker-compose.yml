services:
  app:
    container_name: inventory-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=admin
      - DB_DATABASE=inventory_management
      - DB_SYNCHRONIZE=true
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventory-network

  postgres:
    container_name: inventory-db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=inventory_management
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - inventory-network

volumes:
  postgres_data:
    name: inventory-postgres-data

networks:
  inventory-network:
    name: inventory-network
    driver: bridge
